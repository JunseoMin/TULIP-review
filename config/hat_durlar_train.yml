# general settings
name: train_hat_durlar
model_type: HATModel
scale: 2
num_gpu: auto
manual_seed: 0

# tile: # use the tile mode for limited GPU memory when testing.
#   tile_size: 64 # the higher, the more utilized GPU memory and the less performance change against the full image. must be an integer multiple of the window size.
#   tile_pad: 16 # overlapping between adjacency patches.must be an integer multiple of the window size.

# dataset and data loader settings
datasets:
  train:
    name: durlar
    type: PairedRangeMapDataset
    data_folder: /cluster/work/riner/users/biyang/dataset/depth_intensity_new/train/depth/all/
    io_backend:
      type: disk
    # gt_size: 128
    res: "128_2048"
    downsample_factor: 4
    # maximum_range: 80


    # data loader
    use_shuffle: true
    num_worker_per_gpu: 4
    batch_size_per_gpu: 1
    dataset_enlarge_ratio: 1
    prefetch_mode: ~


# network structures
network_g:
  type: HAT
  upscale: 2
  in_chans: 1
  # img_size: 64
  img_size: 48
  window_size: 4
  # window_size: 4
  compress_ratio: 24
  squeeze_factor: 24
  conv_scale: 0.01
  overlap_ratio: 0.5
  img_range: 1.
  depths: [6, 6, 6, 6, 6, 6]
  # embed_dim: 144
  embed_dim: 96
  num_heads: [6, 6, 6, 6, 6, 6]
  mlp_ratio: 2
  upsampler: 'pixelshuffle'
  resi_connection: '1conv'

# path
path:
  pretrain_network_g: ~
  strict_load_g: true
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  optim_g:
    type: Adam
    lr: !!float 2e-4
    weight_decay: 0
    betas: [0.9, 0.99]

  scheduler:
    type: MultiStepLR
    milestones: [250000, 400000, 450000, 475000]
    gamma: 0.5

  total_iter: 500000
  warmup_iter: -1  # no warm up

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

# # validation settings
# val:
#   val_freq: !!float 2e4
#   save_img: false
#   pbar: False

#   metrics:
#     psnr:
#       type: calculate_psnr
#       crop_border: 2
#       test_y_channel: true
#       better: higher  # the higher, the better. Default: higher
#     ssim:
#       type: calculate_ssim
#       crop_border: 2
#       test_y_channel: true
#       better: higher  # the higher, the better. Default: higher

# logging settings
logger:
  print_freq: 100
  save_checkpoint_freq: 5
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500
